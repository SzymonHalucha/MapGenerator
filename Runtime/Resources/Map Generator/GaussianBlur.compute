#pragma kernel GaussianBlur

StructuredBuffer<float> OriginBuffer;
RWStructuredBuffer<float> TargetBuffer;

uint _Size;
float _Sigma;
int _KernelRadius;

[numthreads(8, 8, 1)]
void GaussianBlur(uint3 id : SV_DispatchThreadID)
{
    float sum = 0;

    for (int i = -_KernelRadius; i <= _KernelRadius; i++)
    {
        for (int j = -_KernelRadius; j <= _KernelRadius; j++)
        {
            int x = id.x + i;
            int y = id.y + j;

            float statement = float(x >= 0 && x < int(_Size) && y >= 0 && y < int(_Size));
            float value = (1.0 / (6.28318530718 * _Sigma * _Sigma)) * exp(-((i * i + j * j) / (2.0 * _Sigma * _Sigma)));
            sum += OriginBuffer[x + y * _Size] * value * statement;
        }
    }

    TargetBuffer[id.x + id.y * _Size] = sum;
}