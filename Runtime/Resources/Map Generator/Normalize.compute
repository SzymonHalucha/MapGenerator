#pragma kernel MinMax
#pragma kernel Normalize

#define PRECISION 10000

RWStructuredBuffer<int> MinMaxBuffer;
RWStructuredBuffer<float> TargetBuffer;

uint _Size;
float2 _StartOffset;

[numthreads(8, 8, 1)]
void MinMax(uint3 id : SV_DispatchThreadID)
{
    uint x = id.x + _StartOffset.x;
    uint y = id.y + _StartOffset.y;

    int value = int(TargetBuffer[x + y * _Size] * PRECISION);
    int oldValue;

    InterlockedMin(MinMaxBuffer[0], value, oldValue);
    InterlockedMax(MinMaxBuffer[1], value, oldValue);
}

[numthreads(8, 8, 1)]
void Normalize(uint3 id : SV_DispatchThreadID)
{
    uint x = id.x + _StartOffset.x;
    uint y = id.y + _StartOffset.y;

    float value = TargetBuffer[x + y * _Size];
    TargetBuffer[x + y * _Size] = (value - MinMaxBuffer[0] / float(PRECISION)) / (MinMaxBuffer[1] / float(PRECISION) - MinMaxBuffer[0] / float(PRECISION));
}